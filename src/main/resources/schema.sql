CREATE TABLE IF NOT EXISTS users
(
    user_id  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email    VARCHAR(255) NOT NULL UNIQUE,
    login    VARCHAR(50)  NOT NULL UNIQUE,
    name     VARCHAR(100),
    birthday DATE CHECK (birthday <= CURRENT_DATE)
);

CREATE TABLE IF NOT EXISTS mpa_rating
(
    mpa_rating_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name          VARCHAR(20) NOT NULL UNIQUE,
    PRIMARY KEY (mpa_rating_id)
);

CREATE TABLE IF NOT EXISTS films
(
    film_id       BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name          VARCHAR(255) NOT NULL,
    description   VARCHAR(500),
    release_date  DATE CHECK (release_date <= CURRENT_DATE),
    duration      INT,
    mpa_rating_id INT REFERENCES mpa_rating (mpa_rating_id)
);

CREATE TABLE IF NOT EXISTS friends
(
    friend_id BIGINT REFERENCES users (user_id) ON DELETE CASCADE,
    user_id   BIGINT REFERENCES users (user_id) ON DELETE CASCADE,
    PRIMARY KEY (friend_id, user_id)
);

CREATE TABLE IF NOT EXISTS likes
(
    film_id BIGINT NOT NULL REFERENCES films (film_id) ON DELETE CASCADE,
    user_id BIGINT NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
    PRIMARY KEY (film_id, user_id)
);

CREATE TABLE IF NOT EXISTS genres
(
    genre_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name     VARCHAR(250) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS films_genres
(
    genre_id BIGINT NOT NULL REFERENCES genres (genre_id) ON DELETE CASCADE,
    film_id  BIGINT NOT NULL REFERENCES films (film_id) ON DELETE CASCADE,
    PRIMARY KEY (genre_id, film_id)
);





